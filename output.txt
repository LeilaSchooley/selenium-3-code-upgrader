from selenium.webdriver.common.by import By

# -*- coding: utf-8 -*-
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
from selenium.common.exceptions import NoAlertPresentException
import unittest, time, re

class UntitledTestCase(unittest.TestCase):
    def setUp(self):
        self.driver = webdriver.Firefox()
        self.driver.implicitly_wait(30)
        self.base_url = "https://www.google.com/"
        self.verificationErrors = []
        self.accept_next_alert = True
    
    def test_untitled_test_case(self):
        driver = self.driver
        driver.get("https://identity.doordash.com/auth/user/signup?client_id=1679775486858412195&dd_device_id=dx_231eb397354b42e5bcf2f08a0856438c&dd_session_id=sx_0dee7e2133ab40ddaf488783907b55a8&intl=en-US&layout=default_caviar&prompt=none&redirect_uri=https%3A%2F%2Fwww.trycaviar.com%2Fpost-login%2F&response_type=code&scope=*&state=%2Fhome%2F%7C%7C2d2ad9d6-9f15-4c49-9ae3-789f53ba4a9b")
driver.find_element(By.ID, "FieldWrapper-0").click()
driver.find_element(By.ID, "FieldWrapper-0").clear()
driver.find_element(By.ID, "FieldWrapper-0").send_keys("helo")
driver.find_element(By.ID, "FieldWrapper-1").click()
driver.find_element(By.ID, "FieldWrapper-1").clear()
driver.find_element(By.ID, "FieldWrapper-1").send_keys("eeeee")
driver.find_element(By.ID, "FieldWrapper-2").click()
driver.find_element(By.ID, "FieldWrapper-2").clear()
driver.find_element(By.ID, "FieldWrapper-2").send_keys("eeeeee")
driver.find_element(By.ID, "FieldWrapper-4").click()
driver.find_element(By.ID, "FieldWrapper-4").clear()
driver.find_element(By.ID, "FieldWrapper-4").send_keys("3343434")
driver.find_element(By.ID, "FieldWrapper-5").click()
driver.find_element(By.ID, "FieldWrapper-5").clear()
driver.find_element(By.ID, "FieldWrapper-5").send_keys("324234234234")
driver.find_element(By.XPATH, "//button[@id='sign-up-submit-button']/span/span/span/span").click()
    
    def is_element_present(self, how, what):
        try: self.driver.find_element(by=how, value=what)
        except NoSuchElementException as e: return False
        return True
    
    def is_alert_present(self):
        try: self.driver.switch_to_alert()
        except NoAlertPresentException as e: return False
        return True
    
    def close_alert_and_get_its_text(self):
        try:
            alert = self.driver.switch_to_alert()
            alert_text = alert.text
            if self.accept_next_alert:
                alert.accept()
            else:
                alert.dismiss()
            return alert_text
        finally: self.accept_next_alert = True
    
    def tearDown(self):
        self.driver.quit()
        self.assertEqual([], self.verificationErrors)

if __name__ == "__main__":
    unittest.main()
